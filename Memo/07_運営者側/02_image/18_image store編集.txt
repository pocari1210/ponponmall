
18_image store編集

◆コントローラー編集◆

ディレクトリ
\app\Http\Controllers\Owner\ImageController.php

storeメソッドを編集する

・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・

$imageFiles = $request->file(ʻfiles'); //配列でファイルを取得 
   if(!is_null($imageFiles)){ 
     foreach($imageFiles as $imageFile){ // それぞれ処理 
       $fileNameToStore = ImageService::upload($imageFile, 'products'); 
     　Image::create([ 
       　'owner_id' => Auth::id(), 
       　'filename' => $fileNameToStore 
     　]); 
   } 
 }

★コード解説★

●$imageFiles = $request->file(ʻfiles');
⇒fileにname属性のfilesを指定

ビューのファイルに記載した
name="files[][image]"のfilesにあたる

●foreach($imageFiles as $imageFile)
⇒foreachで画像を一枚ずつ表示している

●$fileNameToStore = ImageService::upload($imageFile, 'products');
インタベーションで画像のサイズを設定し、アップロードしている

////////////////////////////////////////////////////////////////////////////

◆ImageService編集◆

ディレクトリ
\app\Services\ImageService.php

  public static function upload($imageFile, $folderName){

    if(is_array($imageFile))
    {
      $file = $imageFile['image'];
    } else {
      $file = $imageFile;
    }

    $fileName = uniqid(rand().'_');
    $extension = $file->extension();
    $fileNameToStore = $fileName. '.' . $extension;
    $resizedImage = InterventionImage::make($file)->resize(1920, 1080)->encode();
    Storage::put('public/' . $folderName . '/' . $fileNameToStore, $resizedImage );
    
    return $fileNameToStore;
  }
}

////////////////////////////////////////////////////////////////////////////

★コード解説★

    if(is_array($imageFile))
    {
      $file = $imageFile['image'];
    } else {
      $file = $imageFile;
    }

⇒is_array() で配列かどうか判定している
