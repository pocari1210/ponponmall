
20_image destroy編集

テーブル情報を削除する前に 
Storageフォルダ内画像ファイルを削除する

◆コントローラー編集◆

ディレクトリ
\app\Http\Controllers\Owner\ImageController.php

destroyメソッドを編集

・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・

$image = Image::findOrFail($id); 

$filePath = 'public/products/'. $image->filename;
⇒ファイルのパスを変数$filePathに取得させる

if(Storage::exists($filePath)){ 
 Storage::delete($filePath); 
}
⇒ファイルがあった場合、削除を行う

////////////////////////////////////////////////////////////////////////////

◆ビューの編集◆

ディレクトリ
\resources\views\owner\images\edit.blade.php

<form id="delete_{{$image->id}}" method="post" action="{{ route('owner.images.destroy', ['image' => $image->id ] )}}">
  @csrf
  @method('delete')
     <div class="p-2 w-full flex justify-around mt-32">
        <a href="#" data-id="{{ $image->id }}" onclick="deletePost(this)" class="text-white bg-red-400 border-0 py-2 px-4 focus:outline-none hover:bg-red-500 rounded ">削除する</a>                        
     </div>
</form>

<script>
    function deletePost(e) {
        'use strict';
        if (confirm('本当に削除してもいいですか?')) {
        document.getElementById('delete_' + e.dataset.id).submit();
        }
    }
</script>

★コード解説★
削除をする場合はformタブを用いて、@method('delete')を用いる。

ボタンのhrefは、formでrouteを使っているため、遷移先は「#」とする。





